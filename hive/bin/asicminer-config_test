#!/usr/bin/env bash

#. asic-model

ASICMINER_TEMPLATE="aaa.asic_063211"
ASICMINER_URL="stratum+tcp://eu.ss.btc.com:1800
stratum+tcp://eu.ss.btc.com:443
stratum+tcp://stratum.antpool.com:25"
ASICMINER_PASS=""
ASICMINER_USER_CONFIG=''
ASICMINER_VER=""

ASIC_MODEL="T4.G19"

[ -t 1 ] && . colors

function config_gen() {
#	RIG_CONF="/hive-config/rig.conf"
#	WALLET_CONF="/hive-config/wallet.conf"
#	MINER_CONFIG=$CONFIG_PATH

#	echo "Generating $MINER_CONFIG"

#	[ ! -f $WALLET_CONF ] && echo -e "${RED}No wallet config $WALLET_CONF${NOCOLOR}" && return 1

#	. $RIG_CONF
#	. $WALLET_CONF

#	[[ -z $ASICMINER_TEMPLATE ]] && echo -e "${YELLOW}ASICMINER__TEMPLATE is empty${NOCOLOR}" && return 1
#	[[ -z $ASICMINER_URL ]] && echo -e "${YELLOW}ASICMINER__URL is empty${NOCOLOR}" && return 1

	pools='[]'
	for url in $ASICMINER_URL; do
		pool='{}'
		pool=`jq --null-input --argjson pool "$pool" --arg user "$ASICMINER_TEMPLATE" '$pool + {$user}'`
		pool=`jq --null-input --argjson pool "$pool" --arg url "$url" '$pool + {$url}'`
		#[[ ! -z $ASICMINER_PASS ]] &&
		pool=`jq --null-input --argjson pool "$pool" --arg pass "$ASICMINER_PASS" '$pool + {$pass}'`
		pools=`jq --null-input --argjson pools "$pools" --argjson pool "$pool" '$pools + [$pool]'`
	done

	pools=`jq --null-input --argjson pools "$pools" '{$pools}'`

e="
config pools 'default'
	option ntp_enable 'global'
	option pool1url 'stratum+tcp://39.104.1.226:1800'
	option pool1user 'microbt.init'
	option pool1pw '1234'
	option pool2url 'stratum+tcp://stratum.bixin.com:443'
	option pool2user 'microbtinit.test'
	option pool2pw '1234'
	option pool3url 'stratum+tcp://btc.ss.poolin.com:443'
	option pool3user 'microbt.init'
	option pool3pw '1234'
"
echo -e "$config_global"
#innosilicon A5/A8
	if [[ $ASIC_MODEL == "T4.G19" ]]; then
config_global='
config pools 'default'
	option ntp_enable 'global''
		i=1
		for url in $ASICMINER_URL; do
			#IFS=$'\n'
			[ ! -z $url ] && config_global="$config_global\n\toption pool$i \burl '$url'"
			[ ! -z $ASICMINER_TEMPLATE ] && config_global="$config_global\n\toption pool$i \buser '$ASICMINER_TEMPLATE'"
			[ ! -z $ASICMINER_PASS ] && config_global="$config_global\n\toption pool$i \bpw '$ASICMINER_PASS'"
			(( i++ ))
		done
	fi
#	echo -e "$pools"
	echo -e "$config_global"
#	echo $pools | jq .

if [[ $ASIC_MODEL == "Antminer S9" || $ASIC_MODEL == "Antminer S9i" || $ASIC_MODEL == "Antminer S9 Hydro" || $ASIC_MODEL == "Antminer S9j" || $ASIC_MODEL =~ "Antminer S9" ]]; then
	config_global='{
"api-listen" : true,
"api-network" : true,
"api-groups" : "A:stats:pools:devs:summary:version",
"api-allow" : "A:127.0.0.1,W:127.0.0.1",
"bitmain-use-vil" : true,
"bitmain-freq" : "550",
"bitmain-voltage" : "0706",
"multi-version" : "1"
}'
fi

	#merge user config options into main config
		if [[ ! -z $ASICMINER_USER_CONFIG ]]; then
		while read -r line; do
			[[ -z $line ]] && continue
			varkey=$(echo "$line" | sed s/,$// | awk '{print "{"$0"}"}' | jq -r 'to_entries[] | .key')
			varval=$(echo $line | sed s/,$// | awk '{print "{"$0"}"}' | jq -r 'to_entries[] | .value')
			config_global=$(echo $config_global | jq '."'$varkey'"="'$varval'"')
		done <<< "$ASICMINER_USER_CONFIG"
	fi

	config_global=$(echo "$config_global" | sed s/\"true\"/true/g | sed s/\"false\"/false/g)
	conf=`jq -n --argjson g "$config_global" --argjson p "$pools" '$p * $g'`

	#replace tpl values in whole file
	[[ -z $EWAL && -z $ZWAL && -z $DWAL ]] && echo -e "${RED}No WAL address is set${NOCOLOR}"
	[[ ! -z $EWAL ]] && conf=$(sed "s/%EWAL%/$EWAL/g" <<< "$conf")
	[[ ! -z $DWAL ]] && conf=$(sed "s/%DWAL%/$DWAL/g" <<< "$conf")
	[[ ! -z $ZWAL ]] && conf=$(sed "s/%ZWAL%/$ZWAL/g" <<< "$conf")
	[[ ! -z $EMAIL ]] && conf=$(sed "s/%EMAIL%/$EMAIL/g" <<< "$conf")
	[[ ! -z $WORKER_NAME ]] && conf=$(sed "s/%WORKER_NAME%/$WORKER_NAME/g" <<< "$conf")

	echo "$conf" | jq .
#	echo "$conf" | jq . > $MINER_CONFIG

}

config_gen