#!/usr/bin/env bash


readonly script_mission='Client for ASICs: Check for known viruses'
readonly script_version='0.4'
readonly script_basename="$( basename "$0" )"


#
# strict mode, no unbound variables
#

set -o nounset


# consts

. colors
readonly label_format='-18.18'


# vars

declare -i is_virus_found=0
declare -i is_silent=0


# functions

print_script_version() {
	echo -e "${YELLOW-}${script_mission}, version ${script_version}${NOCOLOR-}"
	echo
}

print_script_usage() {
	echo -e "Usage: ${CYAN-}${script_basename} [-s|--silent]${NOCOLOR-}"
	echo
	echo -e "	${WHITE-}-s${NOCOLOR-}, ${WHITE-}--silent${NOCOLOR-}"
	echo -e "		prints nothing, returns exit code"
	echo
}

portable_file_size_in_bytes() {
	# not used atm
	local -r input_file="${1-}"
	local -i file_size=0
	local -i exitcode=0

	if which stat > /dev/null; then
		file_size="$( stat -c '%s' "$input_file" )"
		exitcode=$?
	else
		file_size="$( ls -l "$input_file" | awk '{print $5}' )"
		exitcode=$?
	fi

	echo "$file_size"

	return "$exitcode"
}

pretty_print() {
	(( is_silent )) && return

	local -r label_text="${1:-<empty>}"
	local -r message_color="${2:-<empty>}"
	local -r message_text="${3:-<empty>}"

	printf "%${label_format}s %b%s%b\n" "$label_text" "$message_color" "$message_text" "${NOCOLOR}"
}

check_ntpd_size() {
	local -r label_text='ntpd size check'
	local -r ntpd_file='/usr/bin/ntpd'
	local -i ntpd_size=0

	if [[ -s "$ntpd_file" ]]; then
		ntpd_size="$( stat -c '%s' "$ntpd_file" )"
		#if cksum /usr/bin/ntpd  | grep -q '892955227 358832 /usr/bin/ntpd'; then # T9+
		if (( ntpd_size < 500000 )); then
			pretty_print "$label_text" "${GREEN}" "looks ok, size $ntpd_size less than 0.5 Mb"
		else
			pretty_print "$label_text" "${BRED}" "very suspicious! size $ntpd_size greater than 0.5 Mb"
			is_virus_found=1
		fi
	else
		pretty_print "$label_text" "${DGRAY}" "file not found"
	fi
}

check_nightswitcher() {
	local -r label_text='Nightswitcher'

	if [[ -e /config/bNminer.conf ]]; then
		pretty_print "$label_text" "${BRED}" 'found'
		is_virus_found=1
	else
		pretty_print "$label_text" "${GREEN}" 'none found'
	fi
}

check_antbuild_old() {
	local -r label_text='Antbuild'

	if [[ -e /etc/ld.so.preload || -e /usr/bin/build || -e /usr/bin/egrep ]]; then
		# old1
		pretty_print "$label_text" "${BRED}" "v2 (uncured) found"
		is_virus_found=1
	else
		if [[ -s /lib/modules/bitmain_axi.ko ]] && cksum /lib/modules/bitmain_axi.ko | grep -q '1596665532 7415 /lib/modules/bitmain_axi.ko'; then
				# old2
				pretty_print "$label_text" "${BRED}" "v1 (cured) found"
				is_virus_found=1
		else
			if { uname -r | grep -q 'g16220c3'; }; then
				# new
				pretty_print "$label_text" "${BRED}" "v2 found"
				is_virus_found=1
			else
				pretty_print "$label_text" "${GREEN}" "none found"
			fi
		fi
	fi
}

check_antbuild() {
	local -r label_text='Antbuild'

	# old1
	if [[ -e /etc/ld.so.preload || -e /usr/bin/build || -e /usr/bin/egrep ]]; then
		pretty_print "$label_text" "${BRED}" "v2 (uncured) found"
		is_virus_found=1
	fi

	# old2
	if { which cksum > /dev/null; }; then
		if [[ -s /lib/modules/bitmain_axi.ko ]] && cksum /lib/modules/bitmain_axi.ko | grep -q '1596665532 7415 /lib/modules/bitmain_axi.ko'; then
			pretty_print "$label_text" "${BRED}" "v1 (cured) found"
			is_virus_found=1
		fi
	fi

	# new
	if { uname -r | grep -q 'g16220c3'; }; then
		pretty_print "$label_text" "${BRED}" "v2 found"
		is_virus_found=1
	fi

	if (( ! is_virus_found )); then
		pretty_print "$label_text" "${GREEN}" "none found"
	fi
}

check_shady_files() {
	local -r label_text='Shady files'
	local -a -r shady_files=( '/config/.antminers' '/usr/antfalg' '/usr/antfalgZ' )
	local -i shady_counter=0

	for file in "${shady_files[@]}"; do
		if [[ -e "$file" ]]; then
			pretty_print "$label_text" "${BRED}" "$file found"
			(( shady_counter++ ))
		fi
	done

	if (( shady_counter )); then
		is_virus_found=1
	else
		pretty_print "$label_text" "${GREEN}" "none found"
	fi
}

bottom_line() {
	echo

	if (( is_virus_found )); then
		pretty_print "STATUS" "${BRED}" "DANGER"
	else
		pretty_print "STATUS" "${BGREEN}" "OK"
	fi

	echo

	echo 'Checksums:'
	md5sum /usr/bin/ntpd
	md5sum /lib/modules/bitmain_axi.ko
}


# code

case "${1-}" in
	'-s' | '--silent')
		is_silent=1
		;;
	'')
		print_script_version
		;;
	'-h' | '--help' | *)
		print_script_version
		print_script_usage
		exit 0
		;;
esac

check_ntpd_size
check_nightswitcher
check_antbuild
check_shady_files

(( ! is_silent )) && bottom_line

exit $(( is_virus_found ))
